name: Build Workflow

on: [push, pull_request]

env:
  ARTIFACTS_PATH: build/jnigen/libs

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            ANDROID: true
            LINUX: true
            WINDOWS_GNU: false
          - os: macos-latest
            MAC: true
            IOS: true
          - os: windows-latest
            WINDOWS_MSVC: true
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Initialize jnigen
        run: ./gradlew jnigen

      - name: Build for Linux
        if: matrix.LINUX == 'true'
        run: ./gradlew jnigenBuildAllLinux

      - name: Build for Android
        if: matrix.ANDROID == 'true'
        run: ./gradlew jnigenBuildAllAndroid

      - name: Build for Mac
        if: matrix.MAC == 'true'
        run: ./gradlew jnigenBuildAllMacOsX

      - name: Build for iOS
        if: matrix.IOS == 'true'
        run: ./gradlew jnigenBuildAllIOS

      - name: Build for Windows (MSVC)
        if: matrix.WINDOWS_MSVC == 'true'
        run: ./gradlew jnigenBuildAllWindows

      - name: Build for Windows (GNU)
        if: matrix.WINDOWS_GNU == 'true'
        run: ./gradlew jnigenBuildAllWindows

      - name: Collect Artifacts
        if: always()
        run: mkdir -p artifacts && cp -r ${{ env.ARTIFACTS_PATH }}/* artifacts/

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-artifacts
          path: artifacts/

  package:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts from Linux
        if: success() && needs.build.outputs['ubuntu-latest'] == 'success'
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-artifacts
          path: artifacts/linux

      - name: Download Artifacts from Mac
        if: success() && needs.build.outputs['macos-latest'] == 'success'
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-artifacts
          path: artifacts/mac

      - name: Download Artifacts from Windows
        if: success() && needs.build.outputs['windows-latest'] == 'success'
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-artifacts
          path: artifacts/windows

      - name: Package All
        run: ./gradlew jnigenPackageAll
